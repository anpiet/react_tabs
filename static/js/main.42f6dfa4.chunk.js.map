{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","_ref","_tabs$find","tabs","selectedTabId","onTabSelected","getClassName","tab","cn","some","t","id","every","_jsxs","children","_jsx","className","map","href","concat","onClick","onClickHandler","title","find","content","App","_useState","useState","_useState2","_slicedToArray","setSelectedTabId","activeTab","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAO,SAAHC,GAEH,IAADC,EADXC,EAAIF,EAAJE,KAAMC,EAAaH,EAAbG,cAAeC,EAAaJ,EAAbI,cAQfC,EAAe,SAACC,GAAQ,OAAKC,IAAG,CACpC,YAAcL,EAAKM,MAAK,SAAAC,GAAC,OAAIA,EAAEC,KAAOP,MACnCG,EAAII,KAAOP,GACVG,EAAII,KAAOR,EAAK,GAAGQ,IAClBR,EAAKS,OAAM,SAAAF,GAAC,OAAIA,EAAEC,KAAOP,QAGhC,OACES,eAAA,OAAK,UAAQ,gBAAeC,SAAA,CAC1BC,cAAA,OAAKC,UAAU,gBAAeF,SAC5BC,cAAA,MAAAD,SAEIX,EAAKc,KAAI,SAAAV,GAAG,OACVQ,cAAA,MAEEC,UAAWV,EAAaC,GACxB,UAAQ,MAAKO,SAEbC,cAAA,KACEG,KAAI,IAAAC,OAAMZ,EAAII,IACd,UAAQ,UACRS,QAAS,kBA3BF,SAACb,GAClBA,EAAII,KAAOP,GACbC,EAAcE,GAyBac,CAAed,IAAKO,SAElCP,EAAIe,SATFf,EAAII,WAiBnBI,cAAA,OAAKC,UAAU,QAAQ,UAAQ,aAAYF,SACE,QADFZ,EACxCC,EAAKoB,MAAK,SAAAhB,GAAG,OAAIA,EAAII,KAAOP,YAAc,IAAAF,OAAA,EAA1CA,EAA4CsB,cC3CxCrB,EAAO,CAClB,CAAEQ,GAAI,QAASW,MAAO,QAASE,QAAS,eACxC,CAAEb,GAAI,QAASW,MAAO,QAASE,QAAS,eACxC,CAAEb,GAAI,QAASW,MAAO,QAASE,QAAS,gBAG7BC,EAAiB,WAAO,IAADvB,EAClCwB,EAA0CC,mBAASxB,EAAK,GAAGQ,IAAGiB,EAAAC,YAAAH,EAAA,GAAvDtB,EAAawB,EAAA,GAAEE,EAAgBF,EAAA,GAUtC,OACEf,eAAA,OAAKG,UAAU,UAASF,SAAA,CACtBC,cAAA,MAAIC,UAAU,QAAOF,SAAA,mBAAAK,OAC2C,QAD3CjB,EACCC,EAAKoB,MAAK,SAAAhB,GAAG,OAAIA,EAAII,KAAOP,YAAc,IAAAF,OAAA,EAA1CA,EAA4CoB,SAElEP,cAACf,EAAI,CACHG,KAAMA,EACNC,cAAeA,EACfC,cAhBgB,SAAC0B,GACjB5B,EAAKM,MAAK,SAAAF,GAAG,OAAIA,EAAII,KAAOP,KAC9B0B,EAAiBC,EAAUpB,IAE3BmB,EAAiB3B,EAAK,GAAGQ,WCjB/BqB,IAASC,OAAOlB,cAACU,EAAG,IAAKS,SAASC,eAAe,W","file":"static/js/main.42f6dfa4.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Tab } from '../../types/tab';\n\ntype Props = {\n  tabs: Array<Tab>,\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs = ({\n  tabs, selectedTabId, onTabSelected,\n}: Props) => {\n  const onClickHandler = (tab: Tab) => {\n    if (tab.id !== selectedTabId) {\n      onTabSelected(tab);\n    }\n  };\n\n  const getClassName = (tab: Tab) => cn({\n    'is-active': (tabs.some(t => t.id === selectedTabId)\n    && tab.id === selectedTabId)\n    || (tab.id === tabs[0].id\n      && tabs.every(t => t.id !== selectedTabId)),\n  });\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map(tab => (\n              <li\n                key={tab.id}\n                className={getClassName(tab)}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => onClickHandler(tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {tabs.find(tab => tab.id === selectedTabId)?.content}\n      </div>\n    </div>\n\n  );\n};\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App : React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (activeTab: Tab) => {\n    if (tabs.some(tab => tab.id === selectedTabId)) {\n      setSelectedTabId(activeTab.id);\n    } else {\n      setSelectedTabId(tabs[0].id);\n    }\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${tabs.find(tab => tab.id === selectedTabId)?.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}