{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","_ref","tabs","selectedTab","onTabSelected","useEffect","some","t","_jsxs","children","_jsx","className","map","tab","href","concat","id","onClick","event","preventDefault","onClickHandler","title","content","App","_useState","useState","_useState2","_slicedToArray","setSelectedTab","ReactDOM","render","document","getElementById"],"mappings":"iMAUaA,EAAO,SAAHC,GAEH,IADZC,EAAID,EAAJC,KAAMC,EAAWF,EAAXE,YAAaC,EAAaH,EAAbG,cAEnBC,qBAAU,WACHH,EAAKI,MAAK,SAAAC,GAAC,OAAIA,IAAMJ,MACxBC,EAAcF,EAAK,OAWvB,OACEM,eAAA,OAAK,UAAQ,gBAAeC,SAAA,CAC1BC,cAAA,OAAKC,UAAU,gBAAeF,SAC5BC,cAAA,MAAAD,SAEIP,EAAKU,KAAI,SAAAC,GAAG,OACVH,cAAA,MAEEC,UAAWE,IAAQV,EACf,YACA,GACJ,UAAQ,MAAKM,SAEbC,cAAA,KACEI,KAAI,IAAAC,OAAMF,EAAIG,IACd,UAAQ,UACRC,QAAS,SAACC,GAAK,OAvBR,SAACA,EAAyBL,GAC/CK,EAAMC,iBACFN,IAAQV,GACVC,EAAcS,GAoBkBO,CAAeF,EAAOL,IAAKJ,SAE9CI,EAAIQ,SAXFR,EAAIG,WAmBnBN,cAAA,OAAKC,UAAU,QAAQ,UAAQ,aAAYF,SACxCN,EAAYmB,cC9CRpB,EAAO,CAClB,CAAEc,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,eACxC,CAAEN,GAAI,QAASK,MAAO,QAASC,QAAS,gBAG7BC,EAAiB,WAC5B,IAAAC,EAAsCC,mBAASvB,EAAK,IAAGwB,EAAAC,YAAAH,EAAA,GAAhDrB,EAAWuB,EAAA,GAAEE,EAAcF,EAAA,GAMlC,OACElB,eAAA,OAAKG,UAAU,UAASF,SAAA,CACtBC,cAAA,MAAIC,UAAU,QAAOF,SAAA,mBAAAM,OACCZ,EAAYkB,SAElCX,cAACV,EAAI,CACHE,KAAMA,EACNC,YAAaA,EACbC,cAZgB,SAACS,GACrBe,EAAef,UCdnBgB,IAASC,OAAOpB,cAACa,EAAG,IAAKQ,SAASC,eAAe,W","file":"static/js/main.b2784f91.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport { useEffect } from 'react';\nimport { Tab } from '../../types/tab';\n\ntype Props = {\n  tabs: Array<Tab>,\n  selectedTab: Tab,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs = ({\n  tabs, selectedTab, onTabSelected,\n}: Props) => {\n  useEffect(() => {\n    if (!tabs.some(t => t === selectedTab)) {\n      onTabSelected(tabs[0]);\n    }\n  });\n\n  const onClickHandler = (event: React.MouseEvent, tab: Tab) => {\n    event.preventDefault();\n    if (tab !== selectedTab) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map(tab => (\n              <li\n                key={tab.id}\n                className={tab === selectedTab\n                  ? 'is-active'\n                  : ''}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${tab.id}`}\n                  data-cy=\"TabLink\"\n                  onClick={(event) => onClickHandler(event, tab)}\n                >\n                  {tab.title}\n                </a>\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n\n  );\n};\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App : React.FC = () => {\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTab(tab);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTab={selectedTab}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}