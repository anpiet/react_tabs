{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","_ref","tabs","selectedTabId","onTabSelected","useEffect","_document$querySelect","map","el","id","includes","document","querySelector","classList","add","_jsxs","children","_jsx","className","tab","href","concat","type","value","onClick","_document$querySelect2","_document$querySelect3","getAttribute","style","backgroundColor","border","fontFamily","title","slice","content","App","_useState","useState","_useState2","_slicedToArray","setSelectedTabId","ReactDOM","render","getElementById"],"mappings":"iMASaA,EAAO,SAAHC,GAEH,IADZC,EAAID,EAAJC,KAAMC,EAAaF,EAAbE,cAAeC,EAAaH,EAAbG,cAQrB,OANAC,qBAAU,WAC6C,IAADC,EAA/CJ,EAAKK,KAAI,SAAAC,GAAE,OAAIA,EAAGC,MAAIC,SAASP,KACM,QAAxCG,EAAAK,SAASC,cAAc,yBAAiB,IAAAN,GAAxCA,EAA0CO,UAAUC,IAAI,iBAK1DC,eAAA,OAAK,UAAQ,gBAAeC,SAAA,CAC1BC,cAAA,OAAKC,UAAU,gBAAeF,SAC5BC,cAAA,MAAAD,SAEId,EAAKK,KAAI,SAAAY,GACP,OACEF,cAAA,MAEEC,UAAWC,EAAIV,KAAON,EAClB,YACA,GACJ,UAAQ,MAAKa,SAEbC,cAAA,KACEG,KAAI,IAAAC,OAAMF,EAAIV,IACd,UAAQ,UAASO,SAEjBC,cAAA,UACEK,KAAK,SACLC,MAAOJ,EAAIV,GACXe,QAAS,WAAO,IAADC,EAAAC,EACb,OAA4C,QAApCD,EAAAd,SAASC,cAAc,qBAAa,IAAAa,GACtB,QADsBC,EAApCD,EACJb,cAAc,YAAI,IAAAc,OADsB,EAApCA,EACgBC,aAAa,WAAO,IAAAN,OAASF,EAAIV,IACrDL,EAAce,GACd,MAENS,MAAO,CACLC,gBAAiB,QACjBC,OAAQ,OACRC,WAAY,WACZf,SAEDG,EAAIa,WAzBJb,EAAIV,WAmCrBQ,cAAA,OAAKC,UAAU,QAAQ,UAAQ,aAAYF,SAAA,aAAAK,OAC3BlB,EAAc8B,MAAM,UCvD7B/B,EAAO,CAClB,CAAEO,GAAI,QAASuB,MAAO,QAASE,QAAS,eACxC,CAAEzB,GAAI,QAASuB,MAAO,QAASE,QAAS,eACxC,CAAEzB,GAAI,QAASuB,MAAO,QAASE,QAAS,gBAG7BC,EAAiB,WAC5B,IAAAC,EAA0CC,mBAAS,SAAQC,EAAAC,YAAAH,EAAA,GAApDjC,EAAamC,EAAA,GAAEE,EAAgBF,EAAA,GAMtC,OACEvB,eAAA,OAAKG,UAAU,UAASF,SAAA,CACtBC,cAAA,MAAIC,UAAU,QAAOF,SAAA,uBAAAK,OACKlB,EAAc8B,MAAM,MAE9ChB,cAACjB,EAAI,CACHE,KAAMA,EACNC,cAAeA,EACfC,cAZgB,SAACe,GACrBqB,EAAiBrB,EAAIV,WCdzBgC,IAASC,OAAOzB,cAACkB,EAAG,IAAKxB,SAASgC,eAAe,W","file":"static/js/main.f59f76db.chunk.js","sourcesContent":["import { useEffect } from 'react';\nimport { Tab } from '../../types/tab';\n\ntype Props = {\n  tabs: Array<Tab>,\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs = ({\n  tabs, selectedTabId, onTabSelected,\n}: Props) => {\n  useEffect(() => {\n    if (!tabs.map(el => el.id).includes(selectedTabId)) {\n      document.querySelector('li:first-child')?.classList.add('is-active');\n    }\n  });\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {\n            tabs.map(tab => {\n              return (\n                <li\n                  key={tab.id}\n                  className={tab.id === selectedTabId\n                    ? 'is-active'\n                    : ''}\n                  data-cy=\"Tab\"\n                >\n                  <a\n                    href={`#${tab.id}`}\n                    data-cy=\"TabLink\"\n                  >\n                    <button\n                      type=\"button\"\n                      value={tab.id}\n                      onClick={() => {\n                        return (document.querySelector('.is-active')\n                          ?.querySelector('a')?.getAttribute('href') !== `#${tab.id}`\n                          ? onTabSelected(tab)\n                          : null);\n                      }}\n                      style={{\n                        backgroundColor: 'white',\n                        border: 'none',\n                        fontFamily: 'inherit',\n                      }}\n                    >\n                      {tab.title}\n                    </button>\n                  </a>\n                </li>\n              );\n            })\n          }\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {`Some text ${selectedTabId.slice(4)}`}\n      </div>\n    </div>\n\n  );\n};\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App : React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is Tab ${selectedTabId.slice(4)}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}